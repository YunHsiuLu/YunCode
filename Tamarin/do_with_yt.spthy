/*
 *  Author: 
 *  Model Name: do_with_yt.spthy
 *  Status: DEVELOPMENTAL
 *
 *  Comments:
 */

theory do_with_yt
begin

builtins: diffie-hellman

rule create_identities:
  let
    pubkey = 'g'^~privkey
  in
    [ Fr(~privkey) ]
  -->
    [ !Identity($A, ~privkey, pubkey), Out(pubkey) ]

rule client_hello:
    [ !Identity($client, ~clientprivkey, clientpubkey), !Identity($server, ~serverprivkey, serverpubkey) ]
  -->
    [ Out(<'client_hello', $client, $server, clientpubkey>) ]

rule receive_client_hello_send_server_hello:
  let
    sessionkey = clientpubkey^~serverprivkey
  in
    [ !Identity($server, ~serverprivkey, serverpubkey), In(<'client_hello', client, $server, clientpubkey>) ]
  --[ ServerCreateSession($server, client, sessionkey)]->
    [ Session($server, client, sessionkey), Out(<'server_hello', $server, client, serverpubkey>) ]

rule receive_server_hello:
  let
    sessionkey = serverpubkey^~clientprivkey
  in
    [ !Identity($client, ~clientprivkey, clientpubkey), In(<'server_hello', server, $client, serverpubkey>) ]
  --[ ClientCreateSession($client, server, sessionkey)]->
    [ Session($client, server, sessionkey) ]

lemma MITM:
"
    All client server sessionkey1 sessionkey2 #i #j .
    (
    	ClientCreateSession(client, server, sessionkey1) @ #i &
    	ServerCreateSession(server, client, sessionkey2) @ #j &
    	#j < #i &
    	not (client = server)
    )
    ==> not (Ex #k1 #k2 . K(sessionkey1) @ #k1 & K(sessionkey2) @ #k2)
"

end